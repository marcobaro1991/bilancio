version: "3.9"
services:
  api:
    build: ./api
    container_name: bilancio_api
    restart: always
    volumes:
      - ./api:/$PWD
    links:
      - "db"
      - "redis"
      - "rabbit"
    environment:
      APP_NAME: bilancio
    ports:
      - "4000:4000"
    working_dir: $PWD
    depends_on:
      - db
      - redis
      - rabbit
      - elasticsearch
      - kibana

  frontend:
    build:
      context: ./frontend
      target: dev
    container_name: bilancio_frontend
    restart: always
    volumes:
      - ./frontend:/src
    command: "npm run start:dev"
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
    links:
      - "api"
    ports:
      - "3000:3000"
    depends_on:
      - api

  db:
    container_name: bilancio_postgres
    image: postgres:14
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: bilancio
      POSTGRES_PASSWORD: bilancio
      POSTGRES_DB: bilancio

  redis:
    container_name: bilancio_redis
    image: redis:alpine3.15
    restart: always
    ports:
      - "56380:6379"

  rabbit:
    container_name: bilancio_rabbit
    image: rabbitmq:management
    restart: always
    ports:
      - "45673:15672"
    environment:
      RABBITMQ_DEFAULT_VHOST: bilancio
      RABBITMQ_DEFAULT_USER: bilancio
      RABBITMQ_DEFAULT_PASS: bilancio

  elasticsearch:
    container_name: bilancio_elasticsearch
    image: elasticsearch:8.3.2
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: 2G
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
  
  kibana:
    container_name: bilancio_kibana
    image: kibana:8.3.2
    restart: always
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes: {}
